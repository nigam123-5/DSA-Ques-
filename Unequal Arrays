class Solution {
    public static long solve(int n, int[] a, int[] b) {
        // code here
        
        Arrays.sort(a);
        Arrays.sort(b);
        
        long s1 = 0 , s2 = 0;
        
        List<Integer> Aodd = new ArrayList<Integer>();
        List<Integer> Aeven = new ArrayList<Integer>();
        List<Integer> Bodd = new ArrayList<Integer>();
        List<Integer> Beven = new ArrayList<Integer>();
        
        for(int i = 0 ; i < n ; i++){
            
            s1 += a[i];
            s2 += b[i];
            
            if(a[i] % 2 == 0){
                
                Aeven.add(a[i]); 
            }
            
            else{
                
                Aodd.add(a[i]);
            }
            
            if(b[i] % 2 == 0){
                
                Beven.add(b[i]); 
            }
            
            else{
                
                Bodd.add(b[i]);
            }
        }
        
        if (s1 != s2 || Aeven.size() != Beven.size()) {
            
            return -1;
        }
        
        long res = 0;
        
        for(int i = 0 ; i < Aeven.size(); i++){
            
            res +=  Math.abs(Aeven.get(i) - Beven.get(i));
        }
        
        for(int i = 0 ; i < Bodd.size(); i++){
            
            res +=  Math.abs(Aodd.get(i) - Bodd.get(i));
        }
        
       return res/4; 
    }
}
      
